#!/bin/bash

#Author DBA R

#source /etc/profile

user=repl

channel_array=({{ channel_array }})

dingding_url="https://{{ dingding_url }}"

#向钉钉发送消息方法
function SendMessageToDingding()
{ # 发送钉钉消息
Dingding_Url="${dingding_url}" 
curl "${Dingding_Url}" -H 'Content-Type: application/json' -d "
 { \"msgtype\":\"text\",
\"text\":{
\"content\":\"${1}\"},
\"at\":{
\"atMobiles\":[\"15668661298\"],
\"isAtAll\":false} }"
}

function check_for_uptime () {
server_uptime=`mysql --login-path=${1}_${user} -e "\s;" | grep Uptime: | awk '{ printf $2$3 }'`
export server_uptime
}

function slave_status() {
Slave_IO=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Slave_IO_Running: | awk '{ print $2 }'`
Slave_SQL=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Slave_SQL_Running: | awk '{ print $2 }'`
Last_Error=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Last_Error: | awk '{ print $2 }'`
export Slave_IO
export Slave_SQL
export Last_Error
}

function slave_status_alert () {

if [ -z ${4} -o -z ${5} ] ; then
        #echo "Replication is not configured or you do not have the required access to MySQL on server $3!"|mail -v -s "$3" rulei@jjl.cn
        SendMessageToDingding "Replication is not configured \nor the replica channel '${1}' does not exist\nor you do not have the required access to MySQL on server ${2}_${3}!"
elif [ ${4} != 'Yes' ] ; then
        #echo "SQL thread not running on server $3!Last Error:${Last_Error}"|mail -v -s "$3" rulei@jjl.cn
        SendMessageToDingding "SQL thread not running for the the replica channel '${1}' on server ${2}_${3}!\nLast Error:"${6}""
elif [ ${5} != 'Yes' ] ; then
        #echo "IO thread not running on server $3!Last Error:${Last_Error}"|mail -v -s "$3" rulei@jjl.cn
        SendMessageToDingding "IO thread not running for the the replica channel '${1}' on server ${2}_${3}!\nLast Error:"${6}""
elif [ ${4} == 'No' ] && [ ${5} == 'No' ] ; then
        #echo "Replication slave is inactive on server $3!Last Error:${Last_Error}"|mail -v -s "$3" rulei@jjl.cn
        SendMessageToDingding "Replication slave is inactive for the the replica channel '${1}' on server ${2}_${3}!\nLast Error:"${6}""
fi

}

function human_readable_time () {

########################################################################
#                                                                      #
#       Function to produce human readable time                        #
#                                                                      #
########################################################################

        usage="$0 seconds 'variable'"
        if [ -z $1 ] || [ -z $2 ] ; then
                echo $usage $red
                exit 1
        fi
        days=$(echo "scale=0 ; $1 / 86400" | bc -l)
        remainder=$(echo "scale=0 ; $1 % 86400" | bc -l)
        hours=$(echo "scale=0 ; $remainder / 3600" | bc -l)
        remainder=$(echo "scale=0 ; $remainder % 3600" | bc -l)
        minutes=$(echo "scale=0 ; $remainder / 60" | bc -l)
        seconds=$(echo "scale=0 ; $remainder % 60" | bc -l)
        export $2="$days"days"$hours"hrs"$minutes"min"$seconds"sec""
}

function slave_delay_status () {
local variable1=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Seconds_Behind_Master: | awk '{ print $2 }'`
sleep 5
local variable2=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Seconds_Behind_Master: | awk '{ print $2 }'`
sleep 5
local variable3=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Seconds_Behind_Master: | awk '{ print $2 }'`
sleep 5
local variable4=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Seconds_Behind_Master: | awk '{ print $2 }'`
sleep 5
local variable5=`mysql --login-path=${1}_${user} -e "show slave status for channel '${2}'\G" | grep Seconds_Behind_Master: | awk '{ print $2 }'`
c=25
local variable_sum=`expr $variable1 + $variable2 + $variable3 + $variable4 + $variable5`
original_seconds=`expr $variable_sum / $c`
export original_seconds
}

function slave_delay_status_alert () {

if [ "${4}" = 'NULL' ] || [ "${4}" = '' ] ; then
       #echo "Unknown Offset - perhaps slave is stopped or not configured on server $3!" | mail -v -s "$3" rulei@jjl.cn
	SendMessageToDingding "The replica is stopped or not configured for the the replica channel '${1}' on server ${2}_${3}"

elif [ "${4}" -gt 7 ];then
       #echo "The data replication latency is "$2",so keep an eye on server $3" | mail -v -s "$3"  rulei@jjl.cn
        SendMessageToDingding "The data replication latency is "${5}"!\nso keep an eye for the the replica channel '${1}' on server ${2}_${3}"
fi
}

grep -v "^$" /etc/hosts|grep -v "^#"|grep {{ monitor_host_group_key }}|awk '{print $1,$2}'| while read ip hostname

do

check_for_uptime ${hostname}

if [ -z ${server_uptime} ] ; then
        SendMessageToDingding "mysql is not running on server ${hostname}_${ip} in env_pro"
else

for i in ${channel_array[*]}

do 

slave_status ${hostname} ${i}

slave_status_alert ${i} ${hostname} ${ip} ${Slave_SQL} ${Slave_IO} "${Last_Error}"

slave_delay_status ${hostname} ${i}

human_readable_time ${original_seconds} seconds_readable

slave_delay_status_alert ${i} ${hostname} ${ip} ${original_seconds} ${seconds_readable}

done

fi

done
