#!/bin/bash

#Author DBA R

#source /etc/profile

user=repl

dingding_url="https://{{ dingding_url }}"

#向钉钉发送消息方法
function SendMessageToDingding()
{ # 发送钉钉消息
Dingding_Url="${dingding_url}" 
curl "${Dingding_Url}" -H 'Content-Type: application/json' -d "
 { \"msgtype\":\"text\",
\"text\":{
\"content\":\"${1}\"},
\"at\":{
\"atMobiles\":[\"15668661298\"],
\"isAtAll\":false} }"
}

function check_for_uptime () {
server_uptime=`mysql --login-path=${1}_${user} -e "\s;" | grep Uptime: | awk '{ printf $2$3 }'`
export server_uptime
}

function mgr_status() {

multi_single_whether=`mysql --login-path=${1}_${user} -e "show variables like '%group_replication_enforce_update_everywhere_checks%';" | grep group_replication_enforce_update_everywhere_checks | awk '{ print $2 }'`

primary_whether=`mysql --login-path=${1}_${user} -e "select member_role from performance_schema.replication_group_members where member_id=@@server_uuid\G;" | grep member_role: | awk '{ print $2 }'`

member_state=`mysql --login-path=${1}_${user} -e "select member_state from performance_schema.replication_group_members where member_id=@@server_uuid\G;" | grep member_state: | awk '{ print $2 }'`

last_error_message=`mysql --login-path=${1}_${user} -e "SELECT LAST_ERROR_MESSAGE FROM performance_schema.replication_applier_status_by_coordinator where CHANNEL_NAME='group_replication_applier'
\G;" | grep LAST_ERROR_MESSAGE: | awk '{ print $2 }'`

if [ "${primary_whether}" == '' ];then

echo "${1}组复制已经停止,无法确定节点类型."

elif [ $multi_single_whether == 'OFF' ] && [ $primary_whether == 'SECONDARY' ];then

variable_read="SECONDARY"

echo "${1}不是PRIMARY,无需检测是否只读状态."

else 

echo "${1}是PRIMARY,需要检查是否只读状态."

variable_read=`mysql --login-path=${1}_${user} -e "select VARIABLE_VALUE from performance_schema.global_variables where variable_name = 'super_read_only'\G;" | grep VARIABLE_VALUE: | awk '{ print $2 }'`

fi

export member_state
export variable_read
export last_error_message

}

function mgr_status_alert () {

if [ -z ${3} ] ; then
       #echo -e "MGR is not configured or you do not have the required access to MySQL on server "$1"!"|mail -v -s "$1" rulei@jjl.cn
        SendMessageToDingding "MGR is not configured or you do not have \nthe required access to MySQL on server "${1}_${2}"!"
elif [ "${3}" != "ONLINE" ] ; then
       #echo -e "Please be aware that member_state is \"${member_state}\" with group replication on server "$1"! Last Error Message:"${LAST_ERROR_MESSAGE}""|mail -v -s "$1" rulei@jjl.cn
        SendMessageToDingding "Please be aware that member_state is ${3} with group replication on server "${1}_${2}"! Last Error Message:"${5}""  
fi

if [ ${4} == 'ON' ] ; then
       #echo -e "Please be aware that the super_read_only is \"ON\" with group replication on server "$1"! Last Error Message:"${LAST_ERROR_MESSAGE}""|mail -v -s "$1" rulei@jjl.cn     
       SendMessageToDingding "Please be aware that the super_read_only is ON \nwith group replication on server "${1}_${2}"! Last Error Message:"${5}""
fi

}

function performance_status () {

count_transactions_in_queue=`mysql --login-path=${1}_${user} -e "select count_transactions_in_queue from performance_schema.replication_group_member_stats where member_id=@@server_uuid\G;" | grep count_transactions_in_queue: | awk '{ print $2 }'`

export count_transactions_in_queue

}

function performance_status_alert () {

if [ "${3}" -gt 1 ];then
       #echo -e "The count_transactions_in_queue is \"$1\",please be aware that there is a problem with group replication on server $2!" | mail -v -s "$2"  rulei@jjl.cn
        SendMessageToDingding "The count_transactions_in_queue is "${3}",\nplease be aware that there is delay with group replication on server ${1}_${2}!"
fi

}

grep -v "^$" /etc/hosts|grep -v "^#"|grep mgr|awk '{print $1,$2}'| while read ip hostname

do

check_for_uptime ${hostname}

if [ -z ${server_uptime} ] ; then
        SendMessageToDingding "mysql is not running on server ${hostname}_${ip} env_{{ business_env }}"
else

mgr_status ${hostname}

mgr_status_alert ${hostname} ${ip} ${member_state} ${variable_read} "${last_error_message}"

performance_status ${hostname}

performance_status_alert ${hostname} ${ip} ${count_transactions_in_queue} 

fi

done
