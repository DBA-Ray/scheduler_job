#!/bin/bash

#Author DBA R

#source /etc/profile

user=repl

## 发送消息方法
function SendMessage()

{

dingding_url="https://{{ dingding_url }}"

#向钉钉发送消息方法
function SendMessageToDingding()
{ 
curl "${dingding_url}" -H 'Content-Type: application/json' -d "
 { \"msgtype\":\"text\",
\"text\":{
\"content\":\"${1}\"},
\"at\":{
\"atMobiles\":[\"{{ mobile }}\"],
\"isAtAll\":false} }"
}

weixin_url="https://{{ weixin_url }}"

#向微信发送消息方法
function SendMessageToWeixin()
{
cat > sendweb.sh<< EOF
    curl "${weixin_url}" \
   -H 'Content-Type: application/json' \
   -d '
   {
        "msgtype": "text",
        "text": {
            "content": "${1}",
            "mentioned_mobile_list":["{{ mobile }}"]
        }
   }'
EOF
sh sendweb.sh && rm -rf sendweb.sh
}

if [ ${1} == "dingding" ]

then SendMessageToDingding "${2}"

elif [ ${1} == "weixin" ]

then SendMessageToWeixin "${2}"

else echo "未设置发送消息方式"

fi

}

function proxysql_status() {
offline_proxysql=`mysql --login-path=${1}_${user} -e "\s" | grep Uptime: | awk '{ printf $2$3 }'`
if [ -z ${offline_proxysql} ] ; then
     SendMessage "{{ message_type }}" "proxysql is not running on server ${1}_${2}!"
else

mysql --login-path=${1}_${user} \
-e "load mysql servers to runtime;save mysql servers to disk;"

offline_mysql_count=`mysql --login-path=${1}_${user} \
-e "select count(distinct(hostname)) as count_offline_mysql from runtime_mysql_servers where status <> 'ONLINE'\G;"\
 | grep count_offline_mysql: | awk '{ printf $2 }'`

if [ ${offline_mysql_count} -gt 0 ] ; then

     offline_mysql=`mysql --login-path=${1}_${user} \
-e "select distinct(hostname) as offline_mysql from runtime_mysql_servers where status <> 'ONLINE' limit 1\G;" | grep offline_mysql: | awk '{ printf $2 }'`

     SendMessage "{{ message_type }}" "Please be aware that ${offline_mysql} is offline!"

     else

     echo "proxysql is running on server ${1}_${2}.No offline MySql."    

fi

fi

}

grep -v "^$" /etc/hosts|grep -v "^#"|grep proxysql|awk '{print $1,$2}'| while read ip hostname

do

proxysql_status ${hostname} ${ip}

done