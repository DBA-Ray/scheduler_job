#!/bin/sh

#author DBA R

if [ $# -ne 1 ]

then

    echo "usage: `basename $0` [pmm_password]"

    exit 1

fi

#source /etc/profile ##加载环境变量，否则在crontab任务里会存在问题

time=`date "+%Y%m%d_%H%M%S"`

hostname={{ ansible_hostname }}

fulltime=`date +%H%M%S`

time_start=`date +%s`

backupdir={{ backupdir }}

monitor="$backupdir/monitor/mysql_hotbackup_status.txt" ##zabbix监控文件

shelldir={{ backupdir }}/shell

logdir="$backupdir/log/xtrabackup_log"

##几点开始全量备份，不等于这个时间做增量备份
n=070001
n1=120001
n2=170001
n3=220001

dingding_url="https://{{ dingding_url }}"

#向钉钉发送消息方法
function SendMessageToDingding()
{ # 发送钉钉消息
Dingding_Url="${dingding_url}" 
curl "${Dingding_Url}" -H 'Content-Type: application/json' -d "
 { \"msgtype\":\"text\",
\"text\":{
\"content\":\"${1}\"},
\"at\":{
\"atMobiles\":[\"15668661298\"],
\"isAtAll\":false} }"
}

function init_check_file()

{

    if [ -d $monitor ]

    then

        rm -rf $monitor

    fi

}

function check_status()

{

    status=`cat ${1}|grep "completed OK"|wc -l`

    if [ $status -eq 1 ]

    then

        ##success backup status

        echo 1 > ${monitor}

       #echo "备份中心物理备份成功！" | mail -r "cecyunwei@cecurs.com" -a $backupdir/mysql/log/xtrabackup_log/${hostname}_${time}_*.log -v -s "备份状态邮件告知" rulei@cecurs.com     

    else

        ##fail backup status

        echo 0 > ${monitor}

        echo "备份中心物理备份失败，请及时查看备份日志！" | mail -a $logdir/${hostname}_${time}_*.log -v -s "备份状态邮件告知" {{ recipient }}
        SendMessageToDingding "{{ business_env }}备份中心（{{ ansible_hostname }}）物理备份失败，请及时查看备份日志！"

    fi

}

###according to backup policy to run xtrabackup###

if [ $fulltime -eq $n -o $fulltime -eq $n1 -o $fulltime -eq $n2 -o $fulltime -eq $n3 ]

then

    init_check_file

    /bin/sh $shelldir/mysql_xtrabackup.sh full ${1} >> $logdir/${hostname}_${time}_full.log 2>&1

    check_status $logdir/${hostname}_${time}_full.log;

else

    init_check_file

    /bin/sh $shelldir/mysql_xtrabackup.sh incr ${1} >> $logdir/${hostname}_${time}_incr.log 2>&1

    check_status $logdir/${hostname}_${time}_incr.log;

fi

###get the backup log and spend time of backup###

time_end=`date +%s`

times=$((${time_end}-${time_start}))

if [ $fulltime -eq $n -o $fulltime -eq $n1 -o $fulltime -eq $n2 -o $fulltime -eq $n3 ]

then

    echo "it takes ${times} seconds to backup the full backup!!!" >> $logdir/${hostname}_${time}_full.log

else

    echo "it takes ${times} seconds to backup the incr backup!!!" >> $logdir/${hostname}_${time}_incr.log

fi

###Clean up the backup 7 days ago

if [ $fulltime -eq 030001 ]

then

   /bin/sh $shelldir/mysql_xtrabackup.sh clean ${1}

fi
